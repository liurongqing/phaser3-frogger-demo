!function(e){var t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);var n={};i.r(n),i.d(n,"Main",function(){return s});const r="./",a="images";class s extends Phaser.Scene{constructor(){super("mainScene")}init(){this.playerSpeed=3,this.enemyMinSpeed=2,this.enemyMaxSpeed=4.5,this.enemyMinY=80,this.enemyMaxY=280,this.isTerminating=!1}preload(){this.load.setBaseURL(r),this.load.setPath(a),this.load.image("background","background.png"),this.load.image("enemy","dragon.png"),this.load.image("player","player.png"),this.load.image("goal","treasure.png")}create(){this.add.image(0,0,"background").setOrigin(0,0);const e=this.sys.game.config.width,t=this.sys.game.config.height;this.playerSprite=this.add.sprite(40,.5*t,"player").setScale(.5),this.goalSprite=this.add.sprite(e-80,.5*t,"goal").setScale(.6),this.enemiesSprite=this.add.group(void 0,{key:"enemy",repeat:5,setXY:{x:90,y:100,stepX:80,stepY:20}}),Phaser.Actions.ScaleXY(this.enemiesSprite.getChildren(),-.4,-.4),Phaser.Actions.Call(this.enemiesSprite.getChildren(),e=>{e.flipX=!0;const t=Math.random()<.5?1:-1,i=this.enemyMinSpeed+Math.random()*(this.enemyMaxSpeed-this.enemyMinSpeed);e.speed=t*i},this)}gameOver(){this.isTerminating=!0,this.cameras.main.shake(500),this.cameras.main.on("camerashakecomplete",()=>{this.cameras.main.fade(500)},this),this.cameras.main.on("camerafadeoutcomplete",()=>{this.scene.restart()},this)}update(){if(this.isTerminating)return;this.input.activePointer.isDown&&(this.playerSprite.x+=this.playerSpeed);const e=this.playerSprite.getBounds();Phaser.Geom.Intersects.RectangleToRectangle(e,this.goalSprite.getBounds())&&this.gameOver();const t=this.enemiesSprite.getChildren(),i=t.length;for(let n=0;n<i;n++)if(t[n].y+=t[n].speed,(t[n].y>=this.enemyMaxY||t[n].y<=this.enemyMinY)&&(t[n].speed*=-1),Phaser.Geom.Intersects.RectangleToRectangle(e,t[n].getBounds())){this.gameOver();break}}}const o=[];for(let e in n)o.push(n[e]);const h={type:Phaser.AUTO,backgroundColor:0,scale:{parent:"app",autoCenter:Phaser.Scale.CENTER_BOTH,mode:Phaser.Scale.ENVELOP,width:640,height:360,min:{width:640,height:360},max:{width:640,height:360}},scene:o};window.game=new Phaser.Game(h)}]);